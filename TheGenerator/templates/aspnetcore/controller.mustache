{{>partial_header}}
#pragma warning disable CS0472 // The result of the expression is always the same since a value of this type is never equal to 'null'
using E05.BusMe.Core.InfrastructureInterfaces.ServiceLayer;
using Org.OpenAPITools.Models;//Need to find a way to change this namespace!
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;

{{! See all the swagger operations in this file! (operationId, baseName}}
{{! https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenOperation.java }}

namespace E05.BusMe.Web.Controllers
{ {{#operations}}
	[Route("api/[controller]")]
	[ApiController]
	public partial class {{baseName}}Controller : Controller
	{
		private readonly I{{baseName}}Service service;

		public {{baseName}}Controller(I{{baseName}}Service service)
		{
			this.service = service;
		}

{{#operation}}
		[{{httpMethod}}]
{{! basePathWithoutHost is some fix for the swagger parser https://github.com/OpenAPITools/openapi-generator/pull/967}}
		[Route("{{{basePathWithoutHost}}}{{{path}}}")]
		public async Task<IActionResult> {{operationId}}({{#allParams}}{{>pathParam}}{{>queryParam}}{{>bodyParam}}{{>formParam}}{{>headerParam}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
	{
	{{! Is there a return type? Yes}}
	{{#returnType}}
		try
		{
			var result = await service.{{summary}}Async({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}).ConfigureAwait(false);

			if (result.HasError)
			return BadRequest(result.ErrorMessage);

			return Ok(result.Value);
		}
		catch (Exception ex)
		{
			return StatusCode(500, ex);
		}
	{{/returnType}}
	{{! If there a NO returnType?}}
	{{^returnType}}

		try
		{
			var result = await service.{{summary}}Async({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}).ConfigureAwait(false);

			if (result.HasError)
			return BadRequest(result.ErrorMessage);

			return Ok();
		}
		catch (Exception ex)
		{
			return StatusCode(500, ex);
		}
	{{/returnType}}
	}

	{{/operation}}
	}
	{{/operations}}
	}
